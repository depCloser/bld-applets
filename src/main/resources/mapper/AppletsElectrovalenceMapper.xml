<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bld.applets.mapper.AppletsElectrovalenceMapper">
    
    <resultMap type="AppletsElectrovalence" id="AppletsElectrovalenceResult">
        <result property="id"    column="id"    />
        <result property="startTime"    column="start_time"    />
        <result property="endTime"    column="end_time"    />
        <result property="timeFrame"    column="time_frame"    />
        <result property="price"    column="price"    />
        <result property="type"    column="type"    />
        <result property="pilesId"    column="piles_id"    />
        <result property="userId"    column="user_id"    />
        <result property="createTime"    column="createTime"    />
        <result property="updateTime"    column="updateTime"    />
        <association property="piles" column="piles_id" select="com.bld.applets.mapper.AppletsPilesMapper.selectAppletsPilesById" />
    </resultMap>

    <sql id="selectAppletsElectrovalenceVo">
        select id, start_time, end_time, time_frame, price, `type`, piles_id, user_id, createTime, updateTime from applets_electrovalence
    </sql>

    <select id="selectAppletsElectrovalenceList" parameterType="AppletsElectrovalence" resultMap="AppletsElectrovalenceResult">
        <include refid="selectAppletsElectrovalenceVo"/>
        <where>  
            <if test="startTime != null  and startTime != ''"> and start_time = #{startTime}</if>
            <if test="endTime != null  and endTime != ''"> and end_time = #{endTime}</if>
            <if test="timeFrame != null "> and time_frame = #{timeFrame}</if>
            <if test="price != null  and price != ''"> and price = #{price}</if>
            <if test="type != null "> and type = #{type}</if>
            <if test="pilesId != null "> and piles_id = #{pilesId}</if>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="createTime != null "> and createTime = #{createTime}</if>
            <if test="updateTime != null "> and updateTime = #{updateTime}</if>
        </where>
    </select>
    
    <select id="selectAppletsElectrovalenceById" parameterType="Long" resultMap="AppletsElectrovalenceResult">
        <include refid="selectAppletsElectrovalenceVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertAppletsElectrovalence" parameterType="AppletsElectrovalence" useGeneratedKeys="true" keyProperty="id">
        insert into applets_electrovalence
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="startTime != null">start_time,</if>
            <if test="endTime != null">end_time,</if>
            <if test="timeFrame != null">time_frame,</if>
            <if test="price != null">price,</if>
            <if test="type != null">type,</if>
            <if test="pilesId != null">piles_id,</if>
            <if test="userId != null">user_id,</if>
            <if test="createTime != null">createTime,</if>
            <if test="updateTime != null">updateTime,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="startTime != null">#{startTime},</if>
            <if test="endTime != null">#{endTime},</if>
            <if test="timeFrame != null">#{timeFrame},</if>
            <if test="price != null">#{price},</if>
            <if test="type != null">#{type},</if>
            <if test="pilesId != null">#{pilesId},</if>
            <if test="userId != null">#{userId},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <insert id="batchInsertAppletsElectrovalence" parameterType="list" useGeneratedKeys="true" keyProperty="id">
        insert into applets_electrovalence
            (start_time, end_time, time_frame, price, `type`, piles_id, user_id, createTime, updateTime)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.startTime},#{item.endTime},#{item.timeFrame},#{item.price},#{item.type},
            #{item.pilesId},#{item.userId},#{item.createTime},#{item.updateTime}
            )
        </foreach>
    </insert>

    <update id="updateAppletsElectrovalence" parameterType="AppletsElectrovalence">
        update applets_electrovalence
        <trim prefix="SET" suffixOverrides=",">
            <if test="startTime != null">start_time = #{startTime},</if>
            <if test="endTime != null">end_time = #{endTime},</if>
            <if test="timeFrame != null">time_frame = #{timeFrame},</if>
            <if test="price != null">price = #{price},</if>
            <if test="type != null">type = #{type},</if>
            <if test="pilesId != null">piles_id = #{pilesId},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="createTime != null">createTime = #{createTime},</if>
            <if test="updateTime != null">updateTime = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteAppletsElectrovalenceById" parameterType="Long">
        delete from applets_electrovalence where id = #{id}
    </delete>

    <delete id="deleteAppletsElectrovalenceByIds" parameterType="String">
        delete from applets_electrovalence where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>